@startjson
{
"/": {"get": "base dashboard",
      "api": {
        "v1": {
            "settings" : {
                "projects": {
                    "get": "List of registered projects",
                    "post": "Register a new project"
                    }
                },
            "dashboard": {
                "get": "Synthetic view on projects"
            },
            "projects": {
                "get": "list of projects",
                "<project_name>": {
                    "get": "Retrieve a project",
                    "versions": {
                        "post": "Add version to project",
                        "<version>": {
                            "get": "Version details",
                            "put": "Update version"
                        }
                    },
                    "campaigns": {
                        "get": "Retrieve campaigns in project",
                        "post": "Create a new occurrence for the campaigns (first one if none)",
                        "<version>": {
                            "<occurrence>": {
                                "get": "Retrieve the campaign-occurrence",
                                "put": "Fill occurrence with ticket and scenario",
                                "patch": "Update status of occurrence",
                                "post": "<&warning> Generate result for occurrence",
                                "tickets": {
                                    "get": "Retrieve tickets within the campaign-occurrence",
                                    "<ticket_reference>": {
                                        "get": "Retrieve ticket in the campaign-occurrence",
                                        "put": "Add scenario linked to ticket",
                                        "scenarios": {
                                            "<scenario_id>": {
                                                "get": "Retrieve current scenario",
                                                "status": {
                                                    "put": "Update scenario status"
                                                }
                                            }
                                        }
                                    }
                                },
                                "deliverables": {
                                    "get": "Retrieve campaign deliverables"
                                }
                            }
                        }
                    },
                    "epics": {
                        "get": "Retrieve project's epics",
                        "<epic_ref>": {
                            "features": {
                                "get": "Retrieve epic's features"
                            }
                        }
                    },
                    "repository":{
                        "get": "Retrieve items from the test repository",
                        "post": "Create update repository"
                    },
                    "bugs": {
                        "get": "Retrieve bugs within the project",
                        "post": "Create new bug",
                        "<internal_id>": {
                            "get":"Retrieve specific bug",
                            "put": "Update bug",
                            "relatedTo": {
                                "delete": "Remove a link"
                            }
                        }
                    }
                }
            },
            "users": {
                "get": "Retrieve all users",
                "patch": "Update an user",
                "post": "Create an user",
                "<username>": {
                    "get": "Retrieve one user"
                },
                "me": {
                    "put": "Update me"
                }
            }
        }
      },
      "front": {
        "v1": {
            "navigation": {
                "get": "provide the navigation bar"
            },
            "projects": {
                "get + req = FORM": "Create project form",
                "post": "Create project action",
                "<project_name>":{
                    "get + req = REDIRECT": "Redirect to the project page",
                    "get": "Project page (multi tab)",
                    "versions": {
                        "get": "Project's versions",
                        "get + req = FORM": "Add version form",
                        "post": "Add version action",
                        "<version>":{
                            "get": "update version modal",
                            "get + req = FORM": "Add ticket form",
                            "get + req = versionUpdate": "Dashboard version update form",
                            "post": "Add ticket action",
                            "put": "Update version action",
                            "tickets": {
                                "get": "Table of tickets",
                                "<ticket_reference>": {
                                    "get + req = FORM": "Updatable row form",
                                    "get + req = row": "Single ticket as table row",
                                    "put": "Update ticket action"
                                }
                            }
                        }
                    },
                    "bugs": {
                        "get + req = REDIRECT": "Redirect to bugs tab",
                        "get": "Bugs tab",
                        "get + req = FORM": "Add new bug form",
                        "get + req = TABLE": "Bugs table",
                        "post": "Create bug action",
                        "<internal_id>": {
                            "get": "View (editable) specific bug",
                            "put": "Update bug action (via form)",
                            "patch": "Update bug action (via button)"
                        }
                    }
                }
            }
        }
      },
      "clear": {
        "delete": "front clear target"},
      "login": {
        "get" : "login form",
        "post": "login action",
        "delete": "log out"
      },
      "documentation": {
        "get": "provide the html documentation source",
        "<filename>": {
            "get": "provide the html content related to filename (target in docContainer)"
        }
      }
    }
}
@endjson
